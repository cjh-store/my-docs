(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{583:function(e,t,s){"use strict";s.r(t);var a=s(7),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"项目创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目创建"}},[e._v("#")]),e._v(" 项目创建")]),e._v(" "),s("div",{staticClass:"language-cmd extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i -g @nestjs/cli\nnest new project-name\n")])])]),s("h2",{attrs:{id:"新增模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新增模块"}},[e._v("#")]),e._v(" 新增模块")]),e._v(" "),s("p",[e._v("NestJS 每个模块，主要就是 Controller、Service、Module 共同努力，形成了一个模块。")]),e._v(" "),s("p",[s("code",[e._v("Controller(负责路由)")]),e._v("：传统意义上的控制器，提供 api 接口，负责处理路由、中转、验证等一些简洁的业务；")]),e._v(" "),s("p",[s("code",[e._v("Service(负责逻辑)")]),e._v("：又称为 "),s("code",[e._v("Provider")]),e._v("， 是一系列服务、repo、工厂方法、helper 的总称，主要负责处理具体的业务，如数据库的增删改查、事务、并发等逻辑代码；")]),e._v(" "),s("p",[s("code",[e._v("Module(负责整合)")]),e._v("：负责将 "),s("code",[e._v("Controller")]),e._v(" 和 "),s("code",[e._v("Service")]),e._v(" 连接起来，类似于 "),s("code",[e._v("namespace")]),e._v(" 的概念；")]),e._v(" "),s("h2",{attrs:{id:"快捷命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快捷命令"}},[e._v("#")]),e._v(" 快捷命令")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("nest g mo modules/article # 创建模块\nnest g s modules/article  # 创建服务\nnest g co modules/article # 创建控制器\nnest g resource xxx       #全部创建\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);